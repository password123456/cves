{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "cveId": "CVE-2025-1023",
    "assignerOrgId": "b7efe717-a805-47cf-8e9a-921fca0ce0ce",
    "state": "PUBLISHED",
    "assignerShortName": "Gridware",
    "dateReserved": "2025-02-04T10:31:51.341Z",
    "datePublished": "2025-02-18T09:45:26.188Z",
    "dateUpdated": "2025-02-18T09:45:26.188Z"
  },
  "containers": {
    "cna": {
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "ChurchCRM",
          "vendor": "ChurchCRM",
          "versions": [
            {
              "status": "affected",
              "version": "ChurchCRM 5.13.0 and prior"
            }
          ]
        }
      ],
      "credits": [
        {
          "lang": "en",
          "type": "finder",
          "value": "Michael McInerney"
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "supportingMedia": [
            {
              "base64": false,
              "type": "text/html",
              "value": "<span style=\"background-color: rgb(255, 255, 255);\">A vulnerability exists in </span><strong>ChurchCRM</strong><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;5.13.0 and prior&nbsp;</span><span style=\"background-color: rgb(255, 255, 255);\">that allows an attacker to execute arbitrary SQL queries by exploiting a </span><strong>time-based blind SQL Injection</strong><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;vulnerability in the </span><strong>EditEventTypes</strong><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;functionality. The </span><code>newCountName</code><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;parameter is directly concatenated into an SQL query without proper sanitization, allowing an attacker to manipulate database queries and execute arbitrary commands, potentially leading to </span><strong>data exfiltration, modification, or deletion.</strong>\n\n\n<br>"
            }
          ],
          "value": "A vulnerability exists in ChurchCRM 5.13.0 and prior that allows an attacker to execute arbitrary SQL queries by exploiting a time-based blind SQL Injection vulnerability in the EditEventTypes functionality. The newCountName parameter is directly concatenated into an SQL query without proper sanitization, allowing an attacker to manipulate database queries and execute arbitrary commands, potentially leading to data exfiltration, modification, or deletion."
        }
      ],
      "impacts": [
        {
          "capecId": "CAPEC-66",
          "descriptions": [
            {
              "lang": "en",
              "value": "CAPEC-66 SQL Injection"
            }
          ]
        }
      ],
      "metrics": [
        {
          "cvssV4_0": {
            "Automatable": "YES",
            "Recovery": "USER",
            "Safety": "NOT_DEFINED",
            "attackComplexity": "LOW",
            "attackRequirements": "NONE",
            "attackVector": "NETWORK",
            "baseScore": 9.3,
            "baseSeverity": "CRITICAL",
            "privilegesRequired": "HIGH",
            "providerUrgency": "RED",
            "subAvailabilityImpact": "HIGH",
            "subConfidentialityImpact": "HIGH",
            "subIntegrityImpact": "LOW",
            "userInteraction": "NONE",
            "valueDensity": "CONCENTRATED",
            "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:H/UI:N/VC:H/VI:H/VA:H/SC:H/SI:L/SA:H/AU:Y/R:U/V:C/RE:H/U:Red",
            "version": "4.0",
            "vulnAvailabilityImpact": "HIGH",
            "vulnConfidentialityImpact": "HIGH",
            "vulnIntegrityImpact": "HIGH",
            "vulnerabilityResponseEffort": "HIGH"
          },
          "format": "CVSS",
          "scenarios": [
            {
              "lang": "en",
              "value": "GENERAL"
            }
          ]
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "cweId": "CWE-89",
              "description": "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "lang": "en",
              "type": "CWE"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "b7efe717-a805-47cf-8e9a-921fca0ce0ce",
        "shortName": "Gridware",
        "dateUpdated": "2025-02-18T09:45:26.188Z"
      },
      "references": [
        {
          "url": "https://github.com/ChurchCRM/CRM/issues/7246"
        }
      ],
      "solutions": [
        {
          "lang": "en",
          "supportingMedia": [
            {
              "base64": false,
              "type": "text/html",
              "value": "<p>To prevent SQL injection, use prepared statements with parameterised queries. Additionally, implement input validation to reject dangerous characters, apply the principle of least privilege to database users to minimise potential damage, and assign appropriate data types in PHP, such as converting newCountName to an integer if it represents a numeric value.</p>"
            }
          ],
          "value": "To prevent SQL injection, use prepared statements with parameterised queries. Additionally, implement input validation to reject dangerous characters, apply the principle of least privilege to database users to minimise potential damage, and assign appropriate data types in PHP, such as converting newCountName to an integer if it represents a numeric value."
        }
      ],
      "source": {
        "discovery": "UNKNOWN"
      },
      "title": "SQL Injection in ChurchCRM newCountName Parameter via EditEventTypes.php",
      "x_generator": {
        "engine": "Vulnogram 0.2.0"
      }
    }
  }
}