{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "cveId": "CVE-2024-47080",
    "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
    "state": "PUBLISHED",
    "assignerShortName": "GitHub_M",
    "dateReserved": "2024-09-17T17:42:37.030Z",
    "datePublished": "2024-10-15T14:53:01.752Z",
    "dateUpdated": "2024-10-15T14:53:01.752Z"
  },
  "containers": {
    "cna": {
      "title": "matrix-js-sdk keys sent via `sendSharedHistoryKeys` vulnerable to interception by malicious homeserver",
      "problemTypes": [
        {
          "descriptions": [
            {
              "cweId": "CWE-200",
              "lang": "en",
              "description": "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
              "type": "CWE"
            }
          ]
        },
        {
          "descriptions": [
            {
              "cweId": "CWE-287",
              "lang": "en",
              "description": "CWE-287: Improper Authentication",
              "type": "CWE"
            }
          ]
        }
      ],
      "metrics": [
        {
          "cvssV4_0": {
            "attackVector": "NETWORK",
            "attackComplexity": "LOW",
            "attackRequirements": "NONE",
            "privilegesRequired": "NONE",
            "userInteraction": "NONE",
            "vulnConfidentialityImpact": "HIGH",
            "vulnIntegrityImpact": "NONE",
            "vulnAvailabilityImpact": "NONE",
            "subConfidentialityImpact": "NONE",
            "subIntegrityImpact": "NONE",
            "subAvailabilityImpact": "NONE",
            "baseScore": 8.7,
            "baseSeverity": "HIGH",
            "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:N/SC:N/SI:N/SA:N",
            "version": "4.0"
          }
        }
      ],
      "references": [
        {
          "name": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-4jf8-g8wp-cx7c",
          "tags": [
            "x_refsource_CONFIRM"
          ],
          "url": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-4jf8-g8wp-cx7c"
        },
        {
          "name": "https://github.com/matrix-org/matrix-spec-proposals/pull/3061",
          "tags": [
            "x_refsource_MISC"
          ],
          "url": "https://github.com/matrix-org/matrix-spec-proposals/pull/3061"
        },
        {
          "name": "https://github.com/matrix-org/matrix-js-sdk/commit/2fb1e659c81f75253c047832dc9dcc2beddfac5f",
          "tags": [
            "x_refsource_MISC"
          ],
          "url": "https://github.com/matrix-org/matrix-js-sdk/commit/2fb1e659c81f75253c047832dc9dcc2beddfac5f"
        }
      ],
      "affected": [
        {
          "vendor": "matrix-org",
          "product": "matrix-js-sdk",
          "versions": [
            {
              "version": ">= 9.11.0, < 34.8.0",
              "status": "affected"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "shortName": "GitHub_M",
        "dateUpdated": "2024-10-15T14:53:01.752Z"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "matrix-js-sdk is the Matrix Client-Server SDK for JavaScript and TypeScript. In matrix-js-sdk versions versions 9.11.0 through 34.7.0, the method `MatrixClient.sendSharedHistoryKeys` is vulnerable to interception by malicious homeservers.  The method was introduced by MSC3061) and is commonly used to share historical message keys with newly invited users, granting them access to past messages in the room. However, it unconditionally sends these \"shared\" keys to all of the invited user's devices, regardless of whether the user's cryptographic identity is verified or whether the user's devices are signed by that identity. This allows the attacker to potentially inject its own devices to receive sensitive historical keys without proper security checks. Note that this only affects clients running the SDK with the legacy crypto stack. Clients using the new Rust cryptography stack (i.e. those that call `MatrixClient.initRustCrypto()` instead of `MatrixClient.initCrypto()`) are unaffected by this vulnerability, because `MatrixClient.sendSharedHistoryKeys()` raises an exception in such environments. The vulnerability was fixed in matrix-js-sdk 34.8.0 by removing the vulnerable functionality. As a workaround, remove use of affected functionality from clients."
        }
      ],
      "source": {
        "advisory": "GHSA-4jf8-g8wp-cx7c",
        "discovery": "UNKNOWN"
      }
    }
  }
}